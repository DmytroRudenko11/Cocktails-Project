{"mappings":"sgBAEA,IAAAA,EAAAC,EAAA,eAAMC,EAAO,CACXC,cAAeC,SAASC,cAAc,4BACtCC,WAAYF,SAASC,cAAc,6BACnCE,MAAOH,SAASC,cAAc,sBAC9BG,KAAMJ,SAASC,cAAc,SAe/B,SAASI,IACPP,EAAKK,MAAMG,UAAUC,OAAO,aACxBT,EAAKM,KAAKE,UAAUE,SAAS,cAC/BV,EAAKM,KAAKE,UAAUG,OAAO,Y,CAZ/BX,EAAKK,MAAMO,iBAAiB,SAASC,IAC/BA,EAAEC,SAAWD,EAAEE,eACjBR,GAAY,IAIhBP,EAAKC,cAAcW,iBAAiB,QAASL,GAC7CP,EAAKI,WAAWQ,iBAAiB,QAASL,GAc1CL,SAASU,iBAAiB,SAASC,IACjC,GAAIA,EAAEC,OAAOE,QAAQC,SAAU,EAmBjCC,eAA+BC,IAkB/B,SAA4BF,EAAUE,GACpCC,EAAKJ,QAAQK,GAAK,GAAGF,IACrBG,EAAMC,IAAM,GAAGN,EAASO,gBACxBC,EAAKC,YAAc,GAAGT,EAASU,WAC/BC,EAAaF,YAAc,GAAGT,EAASY,kBACvC,IAAIC,EAAU,GACdC,EAAKC,UAAY,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACtB,GAAIhB,EAAS,aAAagB,MAAQhB,EAAS,gBAAgBgB,KAAM,CAC/D,IAAKhB,EAAS,aAAagB,MAAwC,OAA/BhB,EAAS,aAAagB,KAAgB,CACxEH,EAAQI,KACN,wGAG2BjB,EAAS,gBAAgBgB,yBAC9ChB,EAAS,gBAAgBgB,gEAKjC,K,CAEFH,EAAQI,KACN,mEAESjB,EAAS,aAAagB,4CACFhB,EAAS,gBAAgBgB,yBAC9ChB,EAAS,gBAAgBgB,+D,CAOvCF,EAAKI,mBAAmB,YAAaL,EAAQM,KAAK,KAMrClC,SAASmC,iBAAiB,cAClCC,SAAQC,IACX,MACMC,EADOD,EAAIE,QAAQ,SACLzB,QAAQK,GACRqB,KAAKC,MAAMC,aAAaC,QAAQ,cAC1BC,KAAI,EAACzB,GAAEA,KAASA,IAChC0B,MAAKC,GAASA,IAAUR,IACPS,MAArBV,EAAIvB,QAAQX,QACdkC,EAAIb,YAAc,wBAGKuB,MAArBV,EAAIvB,QAAQX,QACdkC,EAAIb,YAAc,kBAAiB,G,CAnEzCwB,OAGFhC,eAA6BiC,GAC3B,IAKE,aAJqBrD,EAAAsD,QAAMC,IACzB,4DAA4DF,MAGhDG,KAAKC,OAAO,E,CAC1B,MAAOC,GACPC,QAAQC,IAAIF,E,EAbSG,CAAcxC,GAERA,E,CApB3ByC,CADkBC,OAAOhD,EAAEC,OAAOE,QAAQC,WAN5CjB,EAAKK,MAAMG,UAAUC,OAAO,aAC5BT,EAAKM,KAAKE,UAAUC,OAAO,Y,CAS3B,IAQF,MAAMgB,EAAOvB,SAASC,cAAc,sBAC9ByB,EAAe1B,SAASC,cAAc,4BACtC4B,EAAO7B,SAASC,cAAc,0BAC9BmB,EAAQpB,SAASC,cAAc,qBAC/BiB,EAAOlB,SAASC,cAAc,qB","sources":["src/js/modal-coctails.js"],"sourcesContent":["// =====================открвтие модалки=================\n\nconst refs = {\n  closeModalBtn: document.querySelector('[data-modal-cockt-close]'),\n  addRemlBtn: document.querySelector('.modal-cockt__add-rem-btn'),\n  modal: document.querySelector('[data-modal-cockt]'),\n  body: document.querySelector('body'),\n};\n\n//   for (item of refs.openModalList) {\n//     item.addEventListener('click', toggleModal);\n//   }\nrefs.modal.addEventListener('click', e => {\n  if (e.target === e.currentTarget) {\n    closeModal();\n  }\n});\n\nrefs.closeModalBtn.addEventListener('click', closeModal);\nrefs.addRemlBtn.addEventListener('click', closeModal);\n\nfunction closeModal() {\n  refs.modal.classList.toggle('is-hidden');\n  if (refs.body.classList.contains('no-scroll')) {\n    refs.body.classList.remove('no-scroll');\n  }\n}\n\nfunction toggleModal() {\n  refs.modal.classList.toggle('is-hidden');\n  refs.body.classList.toggle('no-scroll');\n}\n\ndocument.addEventListener('click', e => {\n  if (e.target.dataset.cocktail) {\n    const cocktaiId = Number(e.target.dataset.cocktail);\n    getCocktailData(cocktaiId);\n    toggleModal();\n  }\n  return;\n});\n\n// ===========================================\n\nimport axios from 'axios';\n\n// const learnMoreBtn = document.querySelector('.learn-more-btn');\nconst name = document.querySelector('.modal-cockt__name');\nconst instractions = document.querySelector('.modal-cockt__instr-text');\nconst list = document.querySelector('.modal-cockt__per-list');\nconst image = document.querySelector('.modal-cockt__img');\nconst item = document.querySelector('.modal-cockt__card');\n\nasync function getCocktailData(cocktaiId) {\n  const cocktail = await fetchCocktail(cocktaiId);\n\n  renderCocktailCard(cocktail, cocktaiId);\n}\n\nasync function fetchCocktail(queryToFetch) {\n  try {\n    const result = await axios.get(\n      `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${queryToFetch}`\n    );\n\n    return result.data.drinks[0];\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction renderCocktailCard(cocktail, cocktaiId) {\n  item.dataset.id = `${cocktaiId}`;\n  image.src = `${cocktail.strDrinkThumb}`;\n  name.textContent = `${cocktail.strDrink}`;\n  instractions.textContent = `${cocktail.strInstructions}`;\n  let perList = [];\n  list.innerHTML = '';\n  for (let i = 1; i < 15; i++) {\n    if (cocktail[`strMeasure${i}`] || cocktail[`strIngredient${i}`]) {\n      if (!cocktail[`strMeasure${i}`] || (cocktail[`strMeasure${i}`] === \"\\n\")) {\n        perList.push(\n          `<li class=\"modal-cockt__ingred\">\n          <a>\n            <p>\n            <span data-ingredient=\"${cocktail[`strIngredient${i}`]}\">\n              ${cocktail[`strIngredient${i}`]}\n            </span></p>\n          </a>\n        </li>`\n        );\n        break;\n      }\n      perList.push(\n        `<li class=\"modal-cockt__ingred\">\n          <a>\n            <p>${cocktail[`strMeasure${i}`]}\n            <span data-ingredient=\"${cocktail[`strIngredient${i}`]}\">\n              ${cocktail[`strIngredient${i}`]}\n            </span></p>\n          </a>\n        </li>`\n      );\n    }\n  }\n  list.insertAdjacentHTML('beforeend', perList.join(''));\n\n  markupingBtnModal();\n}\n\nfunction markupingBtnModal() {\n  const btns = document.querySelectorAll('[data-add]');\n  btns.forEach(btn => {\n    const card = btn.closest('.item');\n    const coctId = card.dataset.id;\n    const coctailList = JSON.parse(localStorage.getItem('coctailse'));\n    const numbs = coctailList.map(({ id }) => id);\n    if (numbs.some(value => value === coctId)) {\n      if (btn.dataset.modal != undefined) {\n        btn.textContent = 'Remove from favorite';\n      }\n    } else {\n      if (btn.dataset.modal != undefined) {\n        btn.textContent = 'Add to favorite';\n      }\n    }\n  });\n}\n"],"names":["$2shzp","parcelRequire","$8d241404326cebc5$var$refs","closeModalBtn","document","querySelector","addRemlBtn","modal","body","$8d241404326cebc5$var$closeModal","classList","toggle","contains","remove","addEventListener","e","target","currentTarget","dataset","cocktail","async","cocktaiId","$8d241404326cebc5$var$item","id","$8d241404326cebc5$var$image","src","strDrinkThumb","$8d241404326cebc5$var$name","textContent","strDrink","$8d241404326cebc5$var$instractions","strInstructions","perList","$8d241404326cebc5$var$list","innerHTML","i","push","insertAdjacentHTML","join","querySelectorAll","forEach","btn","coctId","closest","JSON","parse","localStorage","getItem","map","some","value","undefined","$8d241404326cebc5$var$renderCocktailCard","queryToFetch","default","get","data","drinks","error","console","log","$8d241404326cebc5$var$fetchCocktail","$8d241404326cebc5$var$getCocktailData","Number"],"version":3,"file":"favorite-cocktails.3955f48b.js.map"}